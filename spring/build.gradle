configurations {
    jaxb
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'groovy'


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
    }
}



repositories {

    maven { url "https://m2proxy.atlassian.com/repository/public" }
    maven { url "http://repo.maven.apache.org/maven2" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE')
    compile group: 'javax.annotation', name: 'jsr250-api', version:'1.0'
    compile group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    compile group: 'org.apache.commons', name: 'commons-io', version:'1.3.2'
    compile group: 'org.apache.velocity', name: 'velocity', version:'1.7'
    compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.4'
    compile group: 'org.springframework', name: 'spring-oxm', version: '3.0.0.RELEASE'
    compile group: 'org.springframework.ws', name: 'spring-ws-core', version: '2.3.0.RELEASE'
    compile group: 'soap', name: 'soap', version: '2.3.1'
    compile group: 'org.jvnet.jaxb2.maven2', name: 'maven-jaxb2-plugin', version: '0.13.1'
    compile group: 'net.masterthought', name: 'cucumber-reporting', version: '0.4.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.3'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.8.3'
    compile(group: 'com.atlassian.jira', name: 'jira-rest-java-client', version:'2.0.0-m2') {
        exclude(module: 'stax-api')
    }
    compile group: 'com.google.inject', name: 'guice', version:'4.0'
    compile group: 'com.google.guava', name: 'guava', version:'19.0'
    //compile group: 'javax.xml', name: 'jaxb-api', version:'2.1'
    compile group: 'net.serenity-bdd', name: 'serenity-cucumber', version:'1.1.5'
    compile group: 'org.slf4j', name: 'slf4j-simple', version:'1.6.1'
    compile group: 'junit', name: 'junit', version:'4.12'
    compile group: 'info.cukes', name: 'cucumber-junit', version:'1.2.4'
    compile group: 'com.optimaize.anythingworks.client.soap', name: 'anythingworks-client-soap', version: '0.5'
    testCompile group: 'org.assertj', name: 'assertj-core', version:'1.7.0'
}

bootRepackage.enabled = false
// tag::wsdl[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "http://soaptest.parasoft.com/calculator.wsdl"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: "com.soap") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::wsdl[]

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.ws:spring-ws-core")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))

    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
}

jar {
    baseName = 'gs-consuming-web-service'
    version =  '0.1.0'

    from genJaxb.classesDir
}


configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['-f', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
        }
    }
}

dependencies {
    testCompile 'info.cukes:cucumber-java:1.2.4'
    testCompile 'info.cukes:cucumber-junit:1.2.4'

    testCompile 'junit:junit:4.12'
}




